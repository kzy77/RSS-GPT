<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>首页 | FreshRSS</title>
    <link href="https://freshrss.chunkj.us.kg" />
    <updated>Thu, 01 May 2025 18:25:51 GMT</updated>
    <author>
        <name></name>
    </author>
    <id></id>
    
    <entry>
        <title><![CDATA[一个开源、经典的 WPF 控件、组件和实用工具集合，值得参考学习！]]></title>
        <link href="https://www.cnblogs.com/Can-daydayup/p/18850464" />
        <id>https://www.cnblogs.com/Can-daydayup/p/18850464</id>
        <updated>Sun, 27 Apr 2025 21:24:00 +0800</updated>
        <summary type="html"><![CDATA[关键词: WPF, 开源, 控件, 组件, 工具

<br><br>总结:
要点1: Extended.Wpf.Toolkit 是一个开源的WPF控件、组件和实用工具集合。
要点2: 该工具包经典且易于使用。
要点3: 适合想要自定义WPF UI界面的开发者参考和学习。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[当数据爆炸遇上SQL Server：优化策略全链路解析]]></title>
        <link href="https://www.cnblogs.com/xiongze520/p/18855686" />
        <id>https://www.cnblogs.com/xiongze520/p/18855686</id>
        <updated>Wed, 30 Apr 2025 16:44:00 +0800</updated>
        <summary type="html"><![CDATA[关键词: SQL Server, 数据库性能, 索引优化, 分库分表, 全链路优化

<br><br>总结:
1.  面对海量数据，数据库性能至关重要，SQL Server面临分库分表的选择。
2.  从SQL Server角度，文章探讨了从索引优化到架构升级的全链路优化策略。
3.  目标是在数据洪流中提升数据库性能，确保系统稳定。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[谷歌的 NotebookLM 能生成中文播客了]]></title>
        <link href="http://www.ruanyifeng.com/blog/2025/05/notebooklm.html" />
        <id>http://www.ruanyifeng.com/blog/2025/05/notebooklm.html</id>
        <updated>Thu, 01 May 2025 12:26:24 +0800</updated>
        <summary type="html"><![CDATA[None]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[vmess://eyJhZGQiOiJhbnRyYWsuYXJjYW5wYXllci5jb20iLCJhaWQiOiIwIiwiYWxwbiI6IiIsImZwIjoiIiwiaG9zdCI6ImRpdmFyY2RuLmNvbSIsImlkIjoiNDk3NjQ2NmMtYWJiNC00MzUzLW...]]></title>
        <link href="https://t.me/V2rayNg_madam/4462" />
        <id>https://t.me/V2rayNg_madam/4462</id>
        <updated>Thu, 01 May 2025 01:57:35 +0800</updated>
        <summary type="html"><![CDATA[V2RayNG, 配置, 高速, 稳定, 购买

总结:

- 提供了一个V2RayNG配置，声称高速稳定。
- 鼓励用户分享频道并表达对速度的反馈。
- 强调配置的高速和强大，并提供在线支持。
- 鼓励用户购买服务，并声称一次购买即可成为永久客户。
- 提供购买联系方式和客户满意度频道链接。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[一个基于 C# Unity 开发的金庸群侠传 3D 版，直呼牛逼！]]></title>
        <link href="https://www.cnblogs.com/Can-daydayup/p/18855502" />
        <id>https://www.cnblogs.com/Can-daydayup/p/18855502</id>
        <updated>Wed, 30 Apr 2025 15:26:00 +0800</updated>
        <summary type="html"><![CDATA[金庸群侠传, Unity, C#, 3D, 重制版

<br><br>总结:
1.  该项目是一个基于 C# 和 Unity 引擎开发的金庸群侠传 3D 重制版游戏。
2.  游戏类型为回合制战棋战斗开放世界RPG。
3.  该游戏旨在重现经典，勾起玩家的回忆。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[EF Core 10 现已支持 LeftJoin 和 RightJoin 运算符查询了！]]></title>
        <link href="https://www.cnblogs.com/Can-daydayup/p/18852627" />
        <id>https://www.cnblogs.com/Can-daydayup/p/18852627</id>
        <updated>Tue, 29 Apr 2025 08:00:00 +0800</updated>
        <summary type="html"><![CDATA[关键词: EF Core 10, LeftJoin, RightJoin, LINQ, 组合查询

<br><br>总结:
EF Core 10 新增功能主要引入了对 LINQ 中 LeftJoin 和 RightJoin 运算符的支持。在之前的版本中，实现 LEFT JOIN 需要借助复杂的组合查询，例如 SelectMany、GroupJoin 和 DefaultIfEmpty。现在可以直接使用 LeftJoin 和 RightJoin 运算符进行查询，简化了开发过程，提高了代码的可读性和可维护性。这项更新使得 LINQ 查询更加直观和高效。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[vless://b8243b8a-dece-432f-8b4d-88696594cbf8@vip.panelmarzban.com:1300?security=reality&encryption=none&pbk=FdMFSpgEwT0nhczf37d-Z8gFgJtwyV4C_pJlnOTScU...]]></title>
        <link href="https://t.me/V2rayNg_madam/4461" />
        <id>https://t.me/V2rayNg_madam/4461</id>
        <updated>Tue, 29 Apr 2025 06:04:48 +0800</updated>
        <summary type="html"><![CDATA[关键词：V2rayNg, 翻墙, 高速, 稳定, 订阅

<br><br>总结:
要点1：提供V2rayNg订阅链接，用于翻墙，声称高速、稳定，无流量限制。
要点2：鼓励用户测试连接速度，并提供反馈。
要点3：推销付费V2rayNg服务，承诺在线支持、高速稳定，并声称一次购买即可成为长期客户。
要点4：提供销售人员联系方式以及客户好评频道。
要点5：希望用户分享频道并给予支持。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[Promise 这个新 API 真香！]]></title>
        <link href="https://www.cnblogs.com/leadingcode/p/18851970" />
        <id>https://www.cnblogs.com/leadingcode/p/18851970</id>
        <updated>Mon, 28 Apr 2025 16:41:00 +0800</updated>
        <summary type="html"><![CDATA[关键词: 异步, Promise, then, async/await, 微任务

<br><br>总结:
1. 文章介绍了Promise，它是处理异步操作的关键工具。
2. 详细讲解了Promise的then方法，它用于处理异步操作成功或失败后的回调。
3. 提到了async/await，这是更现代的异步处理方式，基于Promise构建，让异步代码更易读。
4. 强调了微任务的重要性，Promise的回调会作为微任务添加到事件循环中，影响执行顺序。
5. 希望读者通过点赞、评论、转发等方式支持作者。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[为什么多智能体不会成功？]]></title>
        <link href="https://www.cnblogs.com/yexiaochai/p/18851347" />
        <id>https://www.cnblogs.com/yexiaochai/p/18851347</id>
        <updated>Mon, 28 Apr 2025 12:14:00 +0800</updated>
        <summary type="html"><![CDATA[None]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[《HelloGitHub》第 109 期]]></title>
        <link href="https://www.cnblogs.com/xueweihan/p/18850411" />
        <id>https://www.cnblogs.com/xueweihan/p/18850411</id>
        <updated>Mon, 28 Apr 2025 08:26:00 +0800</updated>
        <summary type="html"><![CDATA[关键词：HelloGitHub, 开源项目, 有趣, 入门级, GitHub

<br><br>总结:
1. HelloGitHub 是一个分享 GitHub 上有趣且入门级开源项目的平台。
2. 该平台提供的项目涵盖实战项目、入门教程、黑科技、开源书籍、以及大厂开源项目等多种类型。
3. 涵盖多种编程语言。
4. 目的是激发用户对开源的兴趣。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[springboot分页查询并行优化实践]]></title>
        <link href="https://www.cnblogs.com/better-farther-world2099/p/18849712" />
        <id>https://www.cnblogs.com/better-farther-world2099/p/18849712</id>
        <updated>Sun, 27 Apr 2025 15:56:00 +0800</updated>
        <summary type="html"><![CDATA[None]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[微服务之间有哪些调用方式？]]></title>
        <link href="https://www.cnblogs.com/liyongqiang-cc/p/18849484" />
        <id>https://www.cnblogs.com/liyongqiang-cc/p/18849484</id>
        <updated>Sun, 27 Apr 2025 15:04:00 +0800</updated>
        <summary type="html"><![CDATA[关键词: 微服务, 通信, 同步, 异步, 架构

<br><br>总结:
1. 微服务架构将系统拆分为独立的服务。
2. 服务间通信是微服务架构的关键。
3. 主要通信方式包括同步通信（直接调用，立即返回）和异步通信（后续内容缺失，未提供相关信息，无法总结）。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[一次小而美的重构：使用 C# 在 Avalonia 中生成真正好看的词云]]></title>
        <link href="https://www.cnblogs.com/deali/p/18848662" />
        <id>https://www.cnblogs.com/deali/p/18848662</id>
        <updated>Sun, 27 Apr 2025 00:07:00 +0800</updated>
        <summary type="html"><![CDATA[关键词：Avalonia, StarBlogPublisher, 词云, 优化, 算法

<br><br>总结:
1. StarBlogPublisher 原本的词云功能效果粗糙，只是简单堆叠文字。
2. 作者计划对词云进行优化，提升视觉效果。
3. 具体优化方法尚未在文章中提及。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[dotnet 9 通过 AppHostRelativeDotNet 指定自定义的运行时路径]]></title>
        <link href="https://www.cnblogs.com/lindexi/p/18847625" />
        <id>https://www.cnblogs.com/lindexi/p/18847625</id>
        <updated>Sat, 26 Apr 2025 07:18:00 +0800</updated>
        <summary type="html"><![CDATA[None]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[使用 AOT 编译保护 .NET 核心逻辑，同时支持第三方扩展]]></title>
        <link href="https://www.cnblogs.com/tansm/p/18847143/AOTDemo" />
        <id>https://www.cnblogs.com/tansm/p/18847143/AOTDemo</id>
        <updated>Fri, 25 Apr 2025 18:04:00 +0800</updated>
        <summary type="html"><![CDATA[关键词: 组件, 反编译, 反射, 保护, .NET

<br><br>总结:
1.  目标是创建可供第三方引用的.NET组件(DLL)，用于二次开发。
2.  核心需求是保护组件的核心逻辑，防止轻易反编译。
3.  需要支持反射机制，包括访问私有字段。
4.  坚持使用C#开发，避免使用C++/CLI。
5.  文章将分享解决上述挑战的探索历程，包括遇到的困难、尝试的方案和最终实现。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[三维装箱问题（3D Bin Packing Problem, 3D-BPP）]]></title>
        <link href="https://www.cnblogs.com/FreeSql/p/18846755" />
        <id>https://www.cnblogs.com/FreeSql/p/18846755</id>
        <updated>Fri, 25 Apr 2025 15:07:00 +0800</updated>
        <summary type="html"><![CDATA[None]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[基于Blazor实现的运输信息管理系统]]></title>
        <link href="https://www.cnblogs.com/known/p/18844645" />
        <id>https://www.cnblogs.com/known/p/18844645</id>
        <updated>Thu, 24 Apr 2025 15:12:00 +0800</updated>
        <summary type="html"><![CDATA[关键词：运输信息管理系统, Blazor, Auto模式, 微信群, 对账

<br><br>总结:
1.  项目背景是小型运输公司使用微信群汇报运输信息，但随着运单量增加，统计不便，容易漏计，导致与客户对账出现漏单问题。
2.  解决方案是开发一个运输信息管理系统(TIMS)，该系统是一个集手机端和PC端协同工作的信息化系统。
3.  技术选择上，TIMS采用Blazor框架的Auto模式进行开发。
4.  TIMS旨在解决微信群统计不便和漏单问题，提高运输任务管理的效率和准确性，从而优化与客户的对账流程。
]]></summary>
    </entry>
    
</feed>