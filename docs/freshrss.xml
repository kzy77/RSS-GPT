<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>首页 | FreshRSS</title>
    <link href="https://freshrss.chunkj.us.kg" />
    <updated>Thu, 01 May 2025 04:24:01 GMT</updated>
    <author>
        <name></name>
    </author>
    <id></id>
    
    <entry>
        <title><![CDATA[记一次 .NET某工控任务调度系统 卡死分析]]></title>
        <link href="https://www.cnblogs.com/huangxincheng/p/18842230" />
        <id>https://www.cnblogs.com/huangxincheng/p/18842230</id>
        <updated>Wed, 23 Apr 2025 09:58:00 +0800</updated>
        <summary type="html"><![CDATA[关键词：Furion, 定时任务, 疑难杂症, 代码复现, 问题解决

<br><br>总结:
一：背景：一位朋友想加入训练营，并询问一个Furion定时任务的疑难杂症。
二：求助过程：该朋友向作者寻求帮助，但因代码无法本地复现，问题未能解决。
]]></summary>
    </entry>
    
    <entry>
        <title><![CDATA[使用TypeScript开发微信小程序(云开发)-入门篇]]></title>
        <link href="https://www.cnblogs.com/greywen/p/18841741" />
        <id>https://www.cnblogs.com/greywen/p/18841741</id>
        <updated>Wed, 23 Apr 2025 09:04:00 +0800</updated>
        <summary type="html"><![CDATA[关键词：小程序, 云开发, TypeScript, 环境配置, 初始化

<br><br>总结:
1. 确保本地已安装 Node.js 环境。
2. 使用 `npm install typescript --save-dev` 命令安装 TypeScript 开发依赖。
3. 使用 `./node_modules/.bin/tsc --init` 命令初始化 TypeScript 配置文件 `tsconfig.json`。
4. 根据项目需求配置 `tsconfig.json` 文件，例如设置编译目标、模块系统等。
5. 配置完成后，即可在小程序云开发项目中使用 TypeScript 进行开发，利用其静态类型检查等特性。
]]></summary>
    </entry>
    
</feed>